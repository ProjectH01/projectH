<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">
		
    <!-- Data Source Mysql로 변경-->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost/projecth" />
		<property name="username" value="admin" />
		<property name="password" value="admin" />
	</bean>
	<!-- 스프링 jdbc 즉 스프링으로 oracle 디비 연결 -->
	
	<!-- transactionmanager 선언 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>    
	
	<!-- Transaction 기본 설정 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED"/>
			 <!-- name속성값을 *로 지정하면 모든 메서드에 적용 즉 어떠한 메서드를 사용해도 된다
			. 트랜잭션 속성 REQUIRED 를 적용. 즉 값을 가져오는 역할을 함. -->
			<tx:method name="get*" read-only="true"/> 
			<!--  get 으로 시작하는 모든 메서드를 받아들인다. 그리고 단지 읽기 속성을 하기
			위해서  true로 설정 --> 
		</tx:attributes>
	</tx:advice>
	
	<!-- AOP 설정을 사용해서 Transaction 적용 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.projectH.service.*Service.*(..))"/>
	</aop:config>		
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:com/projectH/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:com/projectH/mappers/**/*.xml" />
	</bean>
	<!-- 이 설정은 com.naver.mappers 패키지 아래와 그 하위 패키지를 모두 검색해서 마이바티스 매퍼 XML파일을 모두 
		로드할 것이다. -->
 
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean><!-- mybatis ORM DB 연동 프레임웍 연결 -->	
		
	<!-- @Component 빈들을 자동으로 등록 . -->
	<context:component-scan base-package="com.projectH.*">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>	
</beans>


